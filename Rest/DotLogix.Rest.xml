<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotLogix.Rest</name>
    </assembly>
    <members>
        <member name="M:DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenException.#ctor(DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenResult)">
            <summary>Initializes a new instance of the <see cref="T:System.Exception"></see> class.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenResult)">
            <summary>Initializes a new instance of the <see cref="T:System.Exception"></see> class with serialized data.</summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized
                object data about the exception being thrown.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual
                information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info">info</paramref> parameter is null.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
                The class name is null or
                <see cref="P:System.Exception.HResult"></see> is zero (0).
            </exception>
        </member>
        <member name="M:DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenException.#ctor(System.String,DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenResult)">
            <summary>Initializes a new instance of the <see cref="T:System.Exception"></see> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenException.#ctor(System.String,System.Exception,DotLogix.Core.Rest.Authentication.Jwt.JsonWebTokenResult)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Exception"></see> class with a specified error message
                and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a null reference (Nothing in
                Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.Headers.HeaderValue.op_Equality(DotLogix.Core.Rest.Server.Http.Headers.HeaderValue,DotLogix.Core.Rest.Server.Http.Headers.HeaderValue)">
            <summary>
                Returns a value that indicates whether the values of two
                <see cref="T:DotLogix.Core.Rest.Server.Http.Mime.MimeType" /> objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise,
                false.
            </returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.Headers.HeaderValue.op_Inequality(DotLogix.Core.Rest.Server.Http.Headers.HeaderValue,DotLogix.Core.Rest.Server.Http.Headers.HeaderValue)">
            <summary>
                Returns a value that indicates whether two <see cref="T:DotLogix.Core.Rest.Server.Http.Mime.MimeType" />
                objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.MultiPartData.#ctor(System.String,System.IO.Stream)">
            <summary>Initializes a new instance of the <see cref="T:System.Object"></see> class.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.MultiPartData.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.MultiPartDataValue.#ctor(DotLogix.Core.Rest.Server.Http.Headers.ContentDisposition,DotLogix.Core.Rest.Server.Http.Headers.MimeType,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Object"></see> class.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.State.HttpStatusCode.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.State.HttpStatusCode.op_Equality(DotLogix.Core.Rest.Server.Http.State.HttpStatusCode,DotLogix.Core.Rest.Server.Http.State.HttpStatusCode)">
            <summary>
                Returns a value that indicates whether the values of two
                <see cref="T:DotLogix.Core.Rest.Server.Http.State.HttpStatusCode" /> objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise,
                false.
            </returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.State.HttpStatusCode.op_Inequality(DotLogix.Core.Rest.Server.Http.State.HttpStatusCode,DotLogix.Core.Rest.Server.Http.State.HttpStatusCode)">
            <summary>
                Returns a value that indicates whether two
                <see cref="T:DotLogix.Core.Rest.Server.Http.State.HttpStatusCode" /> objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription.GetHashCode">
            <summary>Serves as the default hash method.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription.op_Equality(DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription,DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription)">
            <summary>
                Returns a value that indicates whether the values of two
                <see cref="T:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription" /> objects are equal.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>
                true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise,
                false.
            </returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription.op_Inequality(DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription,DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription)">
            <summary>
                Returns a value that indicates whether two
                <see cref="T:DotLogix.Core.Rest.Server.Http.WebServiceEventSubscription" /> objects have different values.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.PrefixedRoute.#ctor(System.String,DotLogix.Core.Rest.Server.Routes.IWebServiceRoute)">
            <summary>Initializes a new instance of the <see cref="T:System.Object"></see> class.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.System#Collections#Generic#ICollection{DotLogix#Core#Rest#Server#Http#PrefixedRoute}#Add(DotLogix.Core.Rest.Server.Http.PrefixedRoute)">
            <summary>Adds a route to the collection</summary>
            <param name="route">The route to add</param>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.Add(System.String,DotLogix.Core.Rest.Server.Routes.IWebServiceRoute)">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</summary>
            <param name="prefix">The prefix</param>
            <param name="route">The route to add</param>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.System#Collections#Generic#ICollection{DotLogix#Core#Rest#Server#Http#PrefixedRoute}#Contains(DotLogix.Core.Rest.Server.Http.PrefixedRoute)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>true if <paramref name="item">item</paramref> is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.System#Collections#Generic#ICollection{DotLogix#Core#Rest#Server#Http#PrefixedRoute}#CopyTo(DotLogix.Core.Rest.Server.Http.PrefixedRoute[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex">arrayIndex</paramref> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from <paramref name="arrayIndex">arrayIndex</paramref> to the end of the destination <paramref name="array">array</paramref>.</exception>
        </member>
        <member name="M:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.Remove(DotLogix.Core.Rest.Server.Http.PrefixedRoute)">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>true if <paramref name="item">item</paramref> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if <paramref name="item">item</paramref> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="P:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:DotLogix.Core.Rest.Server.Http.WebServiceRouteCollection.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:DotLogix.Core.Rest.Services.Processors.WebRequestProcessorBase.#ctor(System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Object"></see> class.</summary>
        </member>
        <member name="M:DotLogix.Core.Rest.Services.Writer.WebRequestStreamResult.#ctor(System.IO.Stream,DotLogix.Core.Rest.Server.Http.Headers.MimeType,System.Boolean,System.Int32,DotLogix.Core.Rest.Services.Writer.TransportModes)">
            <summary>Initializes a new instance of the <see cref="T:System.Object"></see> class.</summary>
        </member>
    </members>
</doc>
